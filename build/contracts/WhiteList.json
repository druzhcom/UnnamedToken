{
  "contractName": "WhiteList",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isWhitelisted",
          "type": "bool"
        }
      ],
      "name": "Whitelisted",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "activateAntiWhale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "antiWhaleActivated",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deActivateAntiWhale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "isWhale",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "limitWhale",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_startDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_limitWhale",
          "type": "uint256"
        }
      ],
      "name": "setAntiWhale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "whitelisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "addAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "removeAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isWhitelisted\",\"type\":\"bool\"}],\"name\":\"Whitelisted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"activateAntiWhale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"antiWhaleActivated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deActivateAntiWhale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"isWhale\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitWhale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_limitWhale\",\"type\":\"uint256\"}],\"name\":\"setAntiWhale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"whitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/ilyadruzh/Documents/druzhcom/UnnamedToken/contracts/WhiteList.sol\":\"WhiteList\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9},\"remappings\":[]},\"sources\":{\"/home/ilyadruzh/Documents/druzhcom/UnnamedToken/contracts/AntiWhale.sol\":{\"keccak256\":\"0x67b6d60b3777d9503a264db69d9a46b9f3a879016478cfbe7be6ad1dcb828845\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66520ebf23d2b1d28a691a3987552ca88b8019dafc5611687a42023d0e7c8e65\",\"dweb:/ipfs/QmQ1rNDbyrHnP86H99JNZVLXTE2b5fZRC5qk6wTmxwqxYE\"]},\"/home/ilyadruzh/Documents/druzhcom/UnnamedToken/contracts/WhiteList.sol\":{\"keccak256\":\"0x50501ebb52c90511af9e1eb04102df20d1a466ba393e945324fb34cfe2d861c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://327c8713dd1758850d13bbca073c3e211dfd07a386dc7d83697170da70287518\",\"dweb:/ipfs/QmQ3ejLvpFZvPEju3vQ7nforTSYy6GAxNwAAG5nRrphbyi\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xa35b1f2a670cd2a701a52c398032c9fed72df1909fe394d77ceacbf074e8937b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72b957861691ebdaa78c52834465c4f8296480fe4f1a12ba72dc6c0c8ac076dd\",\"dweb:/ipfs/QmVz1sHCwgEivHPRDswdt9tdvky7EnWqFmbuk1wFE55VMG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361002a565b6004805461ff001916905561007a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6106fa806100896000396000f3fe608060405234801561001057600080fd5b50600436106100d05760003560e01c80630b97bc86146100d55780631ded36aa146100f157806338eada1c146100fa5780634ba79dfe1461010f5780635c975abb146101225780636c3efad61461013e5780636dec8ccc14610151578063715018a61461015e5780638da5cb5b146101665780638fedda4114610186578063b187bd261461018e578063b8e7cd5e1461019f578063c1c3a9c0146101b2578063c24a0f8b146101ba578063d936547e146101c3578063f2fde38b146101d6575b600080fd5b6100de60015481565b6040519081526020015b60405180910390f35b6100de60035481565b61010d6101083660046105fe565b6101e9565b005b61010d61011d3660046105fe565b6102a8565b600454610100900460ff165b60405190151581526020016100e8565b61012e61014c36600461062c565b610339565b60045461012e9060ff1681565b61010d6103a8565b61016e6103e3565b6040516001600160a01b0390911681526020016100e8565b61010d6103f2565b60045462010000900460ff1661012e565b61010d6101ad366004610644565b610441565b61010d61048d565b6100de60025481565b61012e6101d13660046105fe565b6104db565b61010d6101e43660046105fe565b610515565b336101f26103e3565b6001600160a01b0316146102215760405162461bcd60e51b81526004016102189061066f565b60405180910390fd5b6001600160a01b03811660009081526005602052604090205460ff1615156001141561024c57600080fd5b600454610100900460ff166102a5576001600160a01b038116600081815260056020908152604091829020805460ff1916600190811790915591519182526000805160206106a583398151915291015b60405180910390a25b50565b336102b16103e3565b6001600160a01b0316146102d75760405162461bcd60e51b81526004016102189061066f565b6001600160a01b03811660009081526005602052604090205460ff166102fc57600080fd5b6001600160a01b0381166000818152600560209081526040808320805460ff19169055519182526000805160206106a5833981519152910161029c565b60006103436103e3565b6001600160a01b0316336001600160a01b03161480610365575060045460ff16155b8061037257506003548211155b1561037f57506000919050565b600154421015801561039357506002544211155b156103a057506001919050565b506000919050565b336103b16103e3565b6001600160a01b0316146103d75760405162461bcd60e51b81526004016102189061066f565b6103e160006105ae565b565b6000546001600160a01b031690565b336103fb6103e3565b6001600160a01b0316146104215760405162461bcd60e51b81526004016102189061066f565b60045460ff16151560011461043557600080fd5b6004805460ff19169055565b3361044a6103e3565b6001600160a01b0316146104705760405162461bcd60e51b81526004016102189061066f565b60019283556002919091556003556004805460ff19169091179055565b336104966103e3565b6001600160a01b0316146104bc5760405162461bcd60e51b81526004016102189061066f565b60045460ff16156104cc57600080fd5b6004805460ff19166001179055565b600454600090610100900460ff16156104f657506001919050565b506001600160a01b031660009081526005602052604090205460ff1690565b3361051e6103e3565b6001600160a01b0316146105445760405162461bcd60e51b81526004016102189061066f565b6001600160a01b0381166105a95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610218565b6102a5815b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561060f578081fd5b81356001600160a01b0381168114610625578182fd5b9392505050565b60006020828403121561063d578081fd5b5035919050565b600080600060608486031215610658578182fd5b505081359360208301359350604090920135919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea54714518c5d275fdcd3d2a461e4858e4e8cb04fb93cd0bca9d6d34115f26440a2646970667358221220d83caf6e4e7c160eda253057064644987b86a7caca2c12bba6d34bab88c45feb64736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100d05760003560e01c80630b97bc86146100d55780631ded36aa146100f157806338eada1c146100fa5780634ba79dfe1461010f5780635c975abb146101225780636c3efad61461013e5780636dec8ccc14610151578063715018a61461015e5780638da5cb5b146101665780638fedda4114610186578063b187bd261461018e578063b8e7cd5e1461019f578063c1c3a9c0146101b2578063c24a0f8b146101ba578063d936547e146101c3578063f2fde38b146101d6575b600080fd5b6100de60015481565b6040519081526020015b60405180910390f35b6100de60035481565b61010d6101083660046105fe565b6101e9565b005b61010d61011d3660046105fe565b6102a8565b600454610100900460ff165b60405190151581526020016100e8565b61012e61014c36600461062c565b610339565b60045461012e9060ff1681565b61010d6103a8565b61016e6103e3565b6040516001600160a01b0390911681526020016100e8565b61010d6103f2565b60045462010000900460ff1661012e565b61010d6101ad366004610644565b610441565b61010d61048d565b6100de60025481565b61012e6101d13660046105fe565b6104db565b61010d6101e43660046105fe565b610515565b336101f26103e3565b6001600160a01b0316146102215760405162461bcd60e51b81526004016102189061066f565b60405180910390fd5b6001600160a01b03811660009081526005602052604090205460ff1615156001141561024c57600080fd5b600454610100900460ff166102a5576001600160a01b038116600081815260056020908152604091829020805460ff1916600190811790915591519182526000805160206106a583398151915291015b60405180910390a25b50565b336102b16103e3565b6001600160a01b0316146102d75760405162461bcd60e51b81526004016102189061066f565b6001600160a01b03811660009081526005602052604090205460ff166102fc57600080fd5b6001600160a01b0381166000818152600560209081526040808320805460ff19169055519182526000805160206106a5833981519152910161029c565b60006103436103e3565b6001600160a01b0316336001600160a01b03161480610365575060045460ff16155b8061037257506003548211155b1561037f57506000919050565b600154421015801561039357506002544211155b156103a057506001919050565b506000919050565b336103b16103e3565b6001600160a01b0316146103d75760405162461bcd60e51b81526004016102189061066f565b6103e160006105ae565b565b6000546001600160a01b031690565b336103fb6103e3565b6001600160a01b0316146104215760405162461bcd60e51b81526004016102189061066f565b60045460ff16151560011461043557600080fd5b6004805460ff19169055565b3361044a6103e3565b6001600160a01b0316146104705760405162461bcd60e51b81526004016102189061066f565b60019283556002919091556003556004805460ff19169091179055565b336104966103e3565b6001600160a01b0316146104bc5760405162461bcd60e51b81526004016102189061066f565b60045460ff16156104cc57600080fd5b6004805460ff19166001179055565b600454600090610100900460ff16156104f657506001919050565b506001600160a01b031660009081526005602052604090205460ff1690565b3361051e6103e3565b6001600160a01b0316146105445760405162461bcd60e51b81526004016102189061066f565b6001600160a01b0381166105a95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610218565b6102a5815b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561060f578081fd5b81356001600160a01b0381168114610625578182fd5b9392505050565b60006020828403121561063d578081fd5b5035919050565b600080600060608486031215610658578182fd5b505081359360208301359350604090920135919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea54714518c5d275fdcd3d2a461e4858e4e8cb04fb93cd0bca9d6d34115f26440a2646970667358221220d83caf6e4e7c160eda253057064644987b86a7caca2c12bba6d34bab88c45feb64736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2198:9",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:9",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:236:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "139:6:9"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "147:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "165:36:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "191:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "178:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "178:23:9"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "169:5:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "264:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "273:6:9"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "281:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "266:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "266:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "266:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "223:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "234:5:9"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "249:3:9",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "254:1:9",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "245:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "245:11:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "258:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "241:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "241:19:9"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "230:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "230:31:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "220:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "220:42:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "213:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "213:50:9"
                  },
                  "nodeType": "YulIf",
                  "src": "210:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "299:15:9",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "309:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "299:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:9",
                "type": ""
              }
            ],
            "src": "14:306:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "395:120:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "441:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "450:6:9"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "458:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "443:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "443:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "443:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "416:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "425:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "412:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "412:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "437:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "408:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "408:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "405:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "476:33:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "499:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "486:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "486:23:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "476:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "361:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "372:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "384:6:9",
                "type": ""
              }
            ],
            "src": "325:190:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "624:222:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "670:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "679:6:9"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "687:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "672:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "672:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "672:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "645:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "654:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "641:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "641:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "666:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "637:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "637:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "634:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "705:33:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "728:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "715:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "715:23:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "705:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "747:42:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "774:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "785:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "770:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "770:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "757:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "757:32:9"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "747:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "798:42:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "825:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "836:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "821:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "821:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "808:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "808:32:9"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "798:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "574:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "585:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "597:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "605:6:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "613:6:9",
                "type": ""
              }
            ],
            "src": "520:326:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "952:102:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "962:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "974:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "985:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "970:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "970:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "962:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1004:9:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1019:6:9"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1035:3:9",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1040:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1031:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1031:11:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1044:1:9",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1027:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1027:19:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1015:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1015:32:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "997:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "997:51:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "997:51:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "921:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "932:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "943:4:9",
                "type": ""
              }
            ],
            "src": "851:203:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1154:92:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1164:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1176:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1187:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1172:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1172:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1164:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1206:9:9"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1231:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1224:6:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1224:14:9"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1217:6:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1217:22:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1199:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1199:41:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1199:41:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1123:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1134:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1145:4:9",
                "type": ""
              }
            ],
            "src": "1059:187:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1425:228:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1442:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1453:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1435:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1435:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1435:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1476:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1487:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1472:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1472:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1492:2:9",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1465:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1465:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1465:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1515:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1526:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1511:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1511:18:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1531:34:9",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1504:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1504:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1504:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1586:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1597:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1582:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1582:18:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1602:8:9",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1575:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1575:36:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1575:36:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1620:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1632:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1643:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1628:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1628:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1620:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1402:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1416:4:9",
                "type": ""
              }
            ],
            "src": "1251:402:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1832:182:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1849:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1860:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1842:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1842:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1842:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1883:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1894:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1879:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1879:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1899:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1872:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1872:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1872:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1922:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1933:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1918:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1918:18:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1938:34:9",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1911:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1911:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1911:62:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1982:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1994:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2005:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1990:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1990:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1982:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1809:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1823:4:9",
                "type": ""
              }
            ],
            "src": "1658:356:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2120:76:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2130:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2142:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2153:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2138:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2138:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2130:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2172:9:9"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2183:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2165:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2165:25:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2165:25:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2089:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2100:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2111:4:9",
                "type": ""
              }
            ],
            "src": "2019:177:9"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value1, value1) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
      "id": 9,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "149:906:3:-:0;;;;;;;;;;;;-1:-1:-1;867:23:4;665:10:7;867:9:4;:23::i;:::-;924:7:5;:15;;-1:-1:-1;;924:15:5;;;149:906:3;;2041:169:4;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:4;;;-1:-1:-1;;;;;;2131:17:4;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2041:169;;:::o;149:906:3:-;;;;;;;",
  "deployedSourceMap": "149:906:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;156:24:1;;;;;;;;;2165:25:9;;;2153:2;2138:18;156:24:1;;;;;;;;214:25;;;;;;520:240:3;;;;;;:::i;:::-;;:::i;:::-;;766:202;;;;;;:::i;:::-;;:::i;1041:84:5:-;1111:7;;;;;;;1041:84;;;1224:14:9;;1217:22;1199:41;;1187:2;1172:18;1041:84:5;1154:92:9;834:338:1;;;;;;:::i;:::-;;:::i;245:30::-;;;;;;;;;1605:92:4;;;:::i;973:85::-;;;:::i;:::-;;;-1:-1:-1;;;;;1015:32:9;;;997:51;;985:2;970:18;973:85:4;952:102:9;422:136:1;;;:::i;974:79:3:-;1038:8;;;;;;;974:79;;564:264:1;;;;;;:::i;:::-;;:::i;282:134::-;;;:::i;186:22::-;;;;;;340:174:3;;;;;;:::i;:::-;;:::i;1846:189:4:-;;;;;;:::i;:::-;;:::i;520:240:3:-;665:10:7;1185:7:4;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:4;;1177:68;;;;-1:-1:-1;;;1177:68:4;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;593:24:3;::::1;;::::0;;;:14:::1;:24;::::0;;;;;::::1;;:32;;:24:::0;:32:::1;;585:41;;;::::0;::::1;;1111:7:5::0;;;;;;;637:117:3::1;;-1:-1:-1::0;;;;;666:24:3;::::1;;::::0;;;:14:::1;:24;::::0;;;;;;;;:31;;-1:-1:-1;;666:31:3::1;693:4;666:31:::0;;::::1;::::0;;;716:27;;1199:41:9;;;-1:-1:-1;;;;;;;;;;;716:27:3;1172:18:9;716:27:3::1;;;;;;;;637:117;520:240:::0;:::o;766:202::-;665:10:7;1185:7:4;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:4;;1177:68;;;;-1:-1:-1;;;1177:68:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;842:24:3;::::1;;::::0;;;:14:::1;:24;::::0;;;;;::::1;;834:42;;;::::0;::::1;;-1:-1:-1::0;;;;;886:24:3;::::1;913:5;886:24:::0;;;:14:::1;:24;::::0;;;;;;;:32;;-1:-1:-1;;886:32:3::1;::::0;;933:28;1199:41:9;;;-1:-1:-1;;;;;;;;;;;933:28:3;1172:18:9;933:28:3::1;1154:92:9::0;834:338:1;888:4;935:7;:5;:7::i;:::-;-1:-1:-1;;;;;921:21:1;:10;-1:-1:-1;;;;;921:21:1;;:64;;;-1:-1:-1;958:18:1;;;;:27;921:64;:100;;;;1011:10;;1001:6;:20;;921:100;904:140;;;-1:-1:-1;1039:5:1;;834:338;-1:-1:-1;834:338:1:o;904:140::-;1078:9;;1059:15;:28;;:58;;;;;1110:7;;1091:15;:26;;1059:58;1055:87;;;-1:-1:-1;1138:4:1;;834:338;-1:-1:-1;834:338:1:o;1055:87::-;-1:-1:-1;1160:5:1;;834:338;-1:-1:-1;834:338:1:o;1605:92:4:-;665:10:7;1185:7:4;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:4;;1177:68;;;;-1:-1:-1;;;1177:68:4;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;973:85::-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:4;;973:85::o;422:136:1:-;665:10:7;1185:7:4;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:4;;1177:68;;;;-1:-1:-1;;;1177:68:4;;;;;;;:::i;:::-;488:18:1::1;::::0;::::1;;:26;;:18:::0;:26:::1;480:35;;;::::0;::::1;;525:18;:26:::0;;-1:-1:-1;;525:26:1::1;::::0;;422:136::o;564:264::-;665:10:7;1185:7:4;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:4;;1177:68;;;;-1:-1:-1;;;1177:68:4;;;;;;;:::i;:::-;702:9:1::1;:22:::0;;;734:7:::1;:18:::0;;;;762:10:::1;:24:::0;796:18:::1;:25:::0;;-1:-1:-1;;796:25:1::1;::::0;;::::1;::::0;;564:264::o;282:134::-;665:10:7;1185:7:4;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:4;;1177:68;;;;-1:-1:-1;;;1177:68:4;;;;;;;:::i;:::-;346:18:1::1;::::0;::::1;;:27;338:36;;;::::0;::::1;;384:18;:25:::0;;-1:-1:-1;;384:25:1::1;405:4;384:25;::::0;;282:134::o;340:174:3:-;1111:7:5;;400:4:3;;1111:7:5;;;;;416:50:3;;;-1:-1:-1;451:4:3;;340:174;-1:-1:-1;340:174:3:o;416:50::-;-1:-1:-1;;;;;;483:24:3;;;;;:14;:24;;;;;;;;;340:174::o;1846:189:4:-;665:10:7;1185:7:4;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:4;;1177:68;;;;-1:-1:-1;;;1177:68:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:4;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:4;;1453:2:9;1926:73:4::1;::::0;::::1;1435:21:9::0;1492:2;1472:18;;;1465:30;1531:34;1511:18;;;1504:62;-1:-1:-1;;;1582:18:9;;;1575:36;1628:19;;1926:73:4::1;1425:228:9::0;1926:73:4::1;2009:19;2019:8;2041:169:::0;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:4;;;-1:-1:-1;;;;;;2131:17:4;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2041:169;;:::o;14:306:9:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;178:23;;-1:-1:-1;;;;;230:31:9;;220:42;;210:2;;281:6;273;266:22;210:2;309:5;84:236;-1:-1:-1;;;84:236:9:o;325:190::-;384:6;437:2;425:9;416:7;412:23;408:32;405:2;;;458:6;450;443:22;405:2;-1:-1:-1;486:23:9;;395:120;-1:-1:-1;395:120:9:o;520:326::-;597:6;605;613;666:2;654:9;645:7;641:23;637:32;634:2;;;687:6;679;672:22;634:2;-1:-1:-1;;715:23:9;;;785:2;770:18;;757:32;;-1:-1:-1;836:2:9;821:18;;;808:32;;624:222;-1:-1:-1;624:222:9:o;1658:356::-;1860:2;1842:21;;;1879:18;;;1872:30;1938:34;1933:2;1918:18;;1911:62;2005:2;1990:18;;1832:182::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.7.0 <0.9.0;\n\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"./AntiWhale.sol\";\n\ncontract WhiteList is AntiWhale, Pausable {\n    bool wlPaused;\n\n    mapping(address => bool) private whitelistedMap;\n\n    event Whitelisted(address indexed account, bool isWhitelisted);\n\n    function whitelisted(address _address) public view returns (bool) {\n        if (paused()) {\n            return true;\n        }\n\n        return whitelistedMap[_address];\n    }\n\n    function addAddress(address _address) public onlyOwner {\n        require(whitelistedMap[_address] != true);\n\n        if (!paused()) {\n            whitelistedMap[_address] = true;\n            emit Whitelisted(_address, true);\n        }\n    }\n\n    function removeAddress(address _address) public onlyOwner {\n        require(whitelistedMap[_address] != false);\n        whitelistedMap[_address] = false;\n        emit Whitelisted(_address, false);\n    }\n\n    function isPaused() public view returns (bool) {\n        return wlPaused;\n    }\n}\n",
  "sourcePath": "/home/ilyadruzh/Documents/druzhcom/UnnamedToken/contracts/WhiteList.sol",
  "ast": {
    "absolutePath": "/home/ilyadruzh/Documents/druzhcom/UnnamedToken/contracts/WhiteList.sol",
    "exportedSymbols": {
      "AntiWhale": [
        284
      ],
      "Context": [
        1212
      ],
      "Ownable": [
        1021
      ],
      "Pausable": [
        1113
      ],
      "WhiteList": [
        917
      ]
    },
    "id": 918,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 813,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:31:3"
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 814,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 918,
        "sourceUnit": 1114,
        "src": "66:55:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ilyadruzh/Documents/druzhcom/UnnamedToken/contracts/AntiWhale.sol",
        "file": "./AntiWhale.sol",
        "id": 815,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 918,
        "sourceUnit": 285,
        "src": "122:25:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 816,
              "name": "AntiWhale",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 284,
              "src": "171:9:3"
            },
            "id": 817,
            "nodeType": "InheritanceSpecifier",
            "src": "171:9:3"
          },
          {
            "baseName": {
              "id": 818,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1113,
              "src": "182:8:3"
            },
            "id": 819,
            "nodeType": "InheritanceSpecifier",
            "src": "182:8:3"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 917,
        "linearizedBaseContracts": [
          917,
          1113,
          284,
          1021,
          1212
        ],
        "name": "WhiteList",
        "nameLocation": "158:9:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 821,
            "mutability": "mutable",
            "name": "wlPaused",
            "nameLocation": "202:8:3",
            "nodeType": "VariableDeclaration",
            "scope": 917,
            "src": "197:13:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 820,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "197:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 825,
            "mutability": "mutable",
            "name": "whitelistedMap",
            "nameLocation": "250:14:3",
            "nodeType": "VariableDeclaration",
            "scope": 917,
            "src": "217:47:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 824,
              "keyType": {
                "id": 822,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "225:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "217:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 823,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "236:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 831,
            "name": "Whitelisted",
            "nameLocation": "277:11:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 827,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "305:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 831,
                  "src": "289:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 826,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "289:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 829,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isWhitelisted",
                  "nameLocation": "319:13:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 831,
                  "src": "314:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 828,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "314:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "288:45:3"
            },
            "src": "271:63:3"
          },
          {
            "body": {
              "id": 848,
              "nodeType": "Block",
              "src": "406:108:3",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 838,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1057,
                      "src": "420:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "420:8:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 843,
                  "nodeType": "IfStatement",
                  "src": "416:50:3",
                  "trueBody": {
                    "id": 842,
                    "nodeType": "Block",
                    "src": "430:36:3",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "451:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 837,
                        "id": 841,
                        "nodeType": "Return",
                        "src": "444:11:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 844,
                      "name": "whitelistedMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 825,
                      "src": "483:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 846,
                    "indexExpression": {
                      "id": 845,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 833,
                      "src": "498:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "483:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 837,
                  "id": 847,
                  "nodeType": "Return",
                  "src": "476:31:3"
                }
              ]
            },
            "functionSelector": "d936547e",
            "id": 849,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "whitelisted",
            "nameLocation": "349:11:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 834,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 833,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "369:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 849,
                  "src": "361:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 832,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "361:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "360:18:3"
            },
            "returnParameters": {
              "id": 837,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 836,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 849,
                  "src": "400:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 835,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "400:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "399:6:3"
            },
            "scope": 917,
            "src": "340:174:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 880,
              "nodeType": "Block",
              "src": "575:185:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 857,
                            "name": "whitelistedMap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 825,
                            "src": "593:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 859,
                          "indexExpression": {
                            "id": 858,
                            "name": "_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 851,
                            "src": "608:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "593:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "621:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "593:32:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 856,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "585:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "585:41:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 863,
                  "nodeType": "ExpressionStatement",
                  "src": "585:41:3"
                },
                {
                  "condition": {
                    "id": 866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "641:9:3",
                    "subExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 864,
                        "name": "paused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1057,
                        "src": "642:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                          "typeString": "function () view returns (bool)"
                        }
                      },
                      "id": 865,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "642:8:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 879,
                  "nodeType": "IfStatement",
                  "src": "637:117:3",
                  "trueBody": {
                    "id": 878,
                    "nodeType": "Block",
                    "src": "652:102:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 867,
                              "name": "whitelistedMap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 825,
                              "src": "666:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 869,
                            "indexExpression": {
                              "id": 868,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 851,
                              "src": "681:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "666:24:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 870,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "693:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "666:31:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 872,
                        "nodeType": "ExpressionStatement",
                        "src": "666:31:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 874,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 851,
                              "src": "728:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 875,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "738:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 873,
                            "name": "Whitelisted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 831,
                            "src": "716:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                              "typeString": "function (address,bool)"
                            }
                          },
                          "id": 876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "716:27:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 877,
                        "nodeType": "EmitStatement",
                        "src": "711:32:3"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "38eada1c",
            "id": 881,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 854,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 853,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 964,
                  "src": "565:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "565:9:3"
              }
            ],
            "name": "addAddress",
            "nameLocation": "529:10:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 851,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "548:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 881,
                  "src": "540:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 850,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "540:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "539:18:3"
            },
            "returnParameters": {
              "id": 855,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "575:0:3"
            },
            "scope": 917,
            "src": "520:240:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 907,
              "nodeType": "Block",
              "src": "824:144:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 889,
                            "name": "whitelistedMap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 825,
                            "src": "842:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 891,
                          "indexExpression": {
                            "id": 890,
                            "name": "_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 883,
                            "src": "857:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "842:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "870:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "842:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 888,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "834:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "834:42:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 895,
                  "nodeType": "ExpressionStatement",
                  "src": "834:42:3"
                },
                {
                  "expression": {
                    "id": 900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 896,
                        "name": "whitelistedMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 825,
                        "src": "886:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 898,
                      "indexExpression": {
                        "id": 897,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 883,
                        "src": "901:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "886:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 899,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "913:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "886:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 901,
                  "nodeType": "ExpressionStatement",
                  "src": "886:32:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 903,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 883,
                        "src": "945:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "955:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 902,
                      "name": "Whitelisted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 831,
                      "src": "933:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "933:28:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 906,
                  "nodeType": "EmitStatement",
                  "src": "928:33:3"
                }
              ]
            },
            "functionSelector": "4ba79dfe",
            "id": 908,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 886,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 885,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 964,
                  "src": "814:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "814:9:3"
              }
            ],
            "name": "removeAddress",
            "nameLocation": "775:13:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 884,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 883,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "797:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 908,
                  "src": "789:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 882,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "789:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "788:18:3"
            },
            "returnParameters": {
              "id": 887,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "824:0:3"
            },
            "scope": 917,
            "src": "766:202:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 915,
              "nodeType": "Block",
              "src": "1021:32:3",
              "statements": [
                {
                  "expression": {
                    "id": 913,
                    "name": "wlPaused",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 821,
                    "src": "1038:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 912,
                  "id": 914,
                  "nodeType": "Return",
                  "src": "1031:15:3"
                }
              ]
            },
            "functionSelector": "b187bd26",
            "id": 916,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isPaused",
            "nameLocation": "983:8:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 909,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "991:2:3"
            },
            "returnParameters": {
              "id": 912,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 911,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 916,
                  "src": "1015:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 910,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1015:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1014:6:3"
            },
            "scope": 917,
            "src": "974:79:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 918,
        "src": "149:906:3",
        "usedErrors": []
      }
    ],
    "src": "33:1023:3"
  },
  "legacyAST": {
    "absolutePath": "/home/ilyadruzh/Documents/druzhcom/UnnamedToken/contracts/WhiteList.sol",
    "exportedSymbols": {
      "AntiWhale": [
        284
      ],
      "Context": [
        1212
      ],
      "Ownable": [
        1021
      ],
      "Pausable": [
        1113
      ],
      "WhiteList": [
        917
      ]
    },
    "id": 918,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 813,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:31:3"
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 814,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 918,
        "sourceUnit": 1114,
        "src": "66:55:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ilyadruzh/Documents/druzhcom/UnnamedToken/contracts/AntiWhale.sol",
        "file": "./AntiWhale.sol",
        "id": 815,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 918,
        "sourceUnit": 285,
        "src": "122:25:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 816,
              "name": "AntiWhale",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 284,
              "src": "171:9:3"
            },
            "id": 817,
            "nodeType": "InheritanceSpecifier",
            "src": "171:9:3"
          },
          {
            "baseName": {
              "id": 818,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1113,
              "src": "182:8:3"
            },
            "id": 819,
            "nodeType": "InheritanceSpecifier",
            "src": "182:8:3"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 917,
        "linearizedBaseContracts": [
          917,
          1113,
          284,
          1021,
          1212
        ],
        "name": "WhiteList",
        "nameLocation": "158:9:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 821,
            "mutability": "mutable",
            "name": "wlPaused",
            "nameLocation": "202:8:3",
            "nodeType": "VariableDeclaration",
            "scope": 917,
            "src": "197:13:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 820,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "197:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 825,
            "mutability": "mutable",
            "name": "whitelistedMap",
            "nameLocation": "250:14:3",
            "nodeType": "VariableDeclaration",
            "scope": 917,
            "src": "217:47:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 824,
              "keyType": {
                "id": 822,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "225:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "217:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 823,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "236:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 831,
            "name": "Whitelisted",
            "nameLocation": "277:11:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 827,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "305:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 831,
                  "src": "289:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 826,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "289:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 829,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isWhitelisted",
                  "nameLocation": "319:13:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 831,
                  "src": "314:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 828,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "314:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "288:45:3"
            },
            "src": "271:63:3"
          },
          {
            "body": {
              "id": 848,
              "nodeType": "Block",
              "src": "406:108:3",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 838,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1057,
                      "src": "420:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "420:8:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 843,
                  "nodeType": "IfStatement",
                  "src": "416:50:3",
                  "trueBody": {
                    "id": 842,
                    "nodeType": "Block",
                    "src": "430:36:3",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "451:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 837,
                        "id": 841,
                        "nodeType": "Return",
                        "src": "444:11:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 844,
                      "name": "whitelistedMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 825,
                      "src": "483:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 846,
                    "indexExpression": {
                      "id": 845,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 833,
                      "src": "498:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "483:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 837,
                  "id": 847,
                  "nodeType": "Return",
                  "src": "476:31:3"
                }
              ]
            },
            "functionSelector": "d936547e",
            "id": 849,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "whitelisted",
            "nameLocation": "349:11:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 834,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 833,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "369:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 849,
                  "src": "361:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 832,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "361:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "360:18:3"
            },
            "returnParameters": {
              "id": 837,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 836,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 849,
                  "src": "400:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 835,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "400:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "399:6:3"
            },
            "scope": 917,
            "src": "340:174:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 880,
              "nodeType": "Block",
              "src": "575:185:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 857,
                            "name": "whitelistedMap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 825,
                            "src": "593:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 859,
                          "indexExpression": {
                            "id": 858,
                            "name": "_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 851,
                            "src": "608:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "593:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "621:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "593:32:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 856,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "585:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "585:41:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 863,
                  "nodeType": "ExpressionStatement",
                  "src": "585:41:3"
                },
                {
                  "condition": {
                    "id": 866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "641:9:3",
                    "subExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 864,
                        "name": "paused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1057,
                        "src": "642:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                          "typeString": "function () view returns (bool)"
                        }
                      },
                      "id": 865,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "642:8:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 879,
                  "nodeType": "IfStatement",
                  "src": "637:117:3",
                  "trueBody": {
                    "id": 878,
                    "nodeType": "Block",
                    "src": "652:102:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 867,
                              "name": "whitelistedMap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 825,
                              "src": "666:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 869,
                            "indexExpression": {
                              "id": 868,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 851,
                              "src": "681:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "666:24:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 870,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "693:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "666:31:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 872,
                        "nodeType": "ExpressionStatement",
                        "src": "666:31:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 874,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 851,
                              "src": "728:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 875,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "738:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 873,
                            "name": "Whitelisted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 831,
                            "src": "716:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                              "typeString": "function (address,bool)"
                            }
                          },
                          "id": 876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "716:27:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 877,
                        "nodeType": "EmitStatement",
                        "src": "711:32:3"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "38eada1c",
            "id": 881,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 854,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 853,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 964,
                  "src": "565:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "565:9:3"
              }
            ],
            "name": "addAddress",
            "nameLocation": "529:10:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 851,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "548:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 881,
                  "src": "540:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 850,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "540:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "539:18:3"
            },
            "returnParameters": {
              "id": 855,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "575:0:3"
            },
            "scope": 917,
            "src": "520:240:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 907,
              "nodeType": "Block",
              "src": "824:144:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 889,
                            "name": "whitelistedMap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 825,
                            "src": "842:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 891,
                          "indexExpression": {
                            "id": 890,
                            "name": "_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 883,
                            "src": "857:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "842:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "870:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "842:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 888,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "834:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "834:42:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 895,
                  "nodeType": "ExpressionStatement",
                  "src": "834:42:3"
                },
                {
                  "expression": {
                    "id": 900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 896,
                        "name": "whitelistedMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 825,
                        "src": "886:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 898,
                      "indexExpression": {
                        "id": 897,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 883,
                        "src": "901:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "886:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 899,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "913:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "886:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 901,
                  "nodeType": "ExpressionStatement",
                  "src": "886:32:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 903,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 883,
                        "src": "945:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "955:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 902,
                      "name": "Whitelisted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 831,
                      "src": "933:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "933:28:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 906,
                  "nodeType": "EmitStatement",
                  "src": "928:33:3"
                }
              ]
            },
            "functionSelector": "4ba79dfe",
            "id": 908,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 886,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 885,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 964,
                  "src": "814:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "814:9:3"
              }
            ],
            "name": "removeAddress",
            "nameLocation": "775:13:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 884,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 883,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "797:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 908,
                  "src": "789:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 882,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "789:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "788:18:3"
            },
            "returnParameters": {
              "id": 887,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "824:0:3"
            },
            "scope": 917,
            "src": "766:202:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 915,
              "nodeType": "Block",
              "src": "1021:32:3",
              "statements": [
                {
                  "expression": {
                    "id": 913,
                    "name": "wlPaused",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 821,
                    "src": "1038:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 912,
                  "id": 914,
                  "nodeType": "Return",
                  "src": "1031:15:3"
                }
              ]
            },
            "functionSelector": "b187bd26",
            "id": 916,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isPaused",
            "nameLocation": "983:8:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 909,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "991:2:3"
            },
            "returnParameters": {
              "id": 912,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 911,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 916,
                  "src": "1015:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 910,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1015:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1014:6:3"
            },
            "scope": 917,
            "src": "974:79:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 918,
        "src": "149:906:3",
        "usedErrors": []
      }
    ],
    "src": "33:1023:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-08-03T16:05:49.592Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}